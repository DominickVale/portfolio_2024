---
type Props = {
   id: string
    size: string
}

const { id, size } = Astro.props
---
<div
  id={id}
  class='fixed h-[var(--size)] w-[var(--size)] left-[var(--pos-x)] top-[var(--pos-y)] translate-x-[-50%] translate-y-[-50%] rounded-full overflow-hidden'
  style=`--size: ${size};`
>
  <ul class="radial-menu relative h-full w-full">
    <slot/>
  </ul>
</div>

<style is:global>
  .radial-menu-item-label {
    position: absolute;
    top: var(--y);
    left: var(--x);
    transform: translate(-50%, -50%);
    color: red;
    z-index: 100;
  }
  .radial-menu-item:hover .radial-menu-item-bg {
    background: radial-gradient(transparent var(--inner-radius), red var(--inner-radius));
  }
  .radial-menu-item-shape {
    width: var(--size);
    height: var(--size);

    position: absolute;
    transform-origin: 100% 100% 0;
    bottom: 50%;
    right: 50%;

    transform-origin: 100% 100%;
    transform: rotate(var(--rotate)) skew(var(--skew)) translate(var(--gap), var(--gap));
    cursor: pointer;
    overflow: hidden;
  }

  .radial-menu-item-bg {
    display: block;
    width: 200%;
    height: 200%;
    transform-origin: 50% 50%;
    border-radius: 50%;
    transform: skew(calc(var(--skew) * -1)) rotate(calc(var(--rotate) * -1));
    color: black;
    background: radial-gradient(
      transparent var(--inner-radius),
      rgba(109, 109, 109, 0.925) var(--inner-radius)
    );
  }
</style>
