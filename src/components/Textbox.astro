---
import { type HTMLAttributes } from 'astro/types'

type Props = HTMLAttributes<'input'> & { area?: boolean; uppercase?: boolean; frame?: boolean }
const { area, uppercase, frame, ...props } = Astro.props

const Component = Astro.props.area ? 'textarea' : 'input'
---

<div class="textbox-wrapper relative">
  <Component
    type="text"
    class:list={[
      'textbox block w-full bg-[rgba(0,0,0,0.9)] px-3 py-1 text-xs focus:outline-none',
      'placeholder:text-[rgba(255,255,255,0.6)]',
      area && 'min-h-16',
      uppercase && 'uppercase',
    ]}
    {...props}
  />
  {frame && <div class="fui-corners !border-0 pointer-events-none" />}
  <div class:list={['absolute right-0 flex items-center pr-2', area ? 'bottom-4' : 'inset-y-0']}>
    <div class="dot mr-2 h-1 w-1 rounded-full bg-white opacity-30"></div>
  </div>
</div>

<style>
  input:-webkit-autofill,
  input:-webkit-autofill:hover,
  input:-webkit-autofill:focus,
  textarea:-webkit-autofill,
  textarea:-webkit-autofill:hover,
  textarea:-webkit-autofill:focus {
    -webkit-text-fill-color: white;
    -webkit-box-shadow: 0 0 0px 1000px var(--bg-dark) inset;
  }
  input:-webkit-autofill::first-line {
    font-family: monospace !important;
  }
  .textbox-wrapper-valid .dot {
    background-color: theme('colors.primary');
    opacity: 1;
  }
  .textbox-wrapper-invalid .textbox {
    color: theme('colors.error');
  }
  .textbox-wrapper-invalid .dot {
    background-color: theme('colors.error');
    opacity: 0.5;
  }
  .fui-corners {
    opacity: 1;
    transform: scale(0.2);
    transition: all 0.2s ease-in-out;
  }
  .textbox:focus + .fui-corners {
    transform: scale(1);
    animation: slight-flickering 0.3s infinite alternate;
  }
  .textbox-wrapper-invalid .fui-corners {
    --color: red;
    animation: fast-blink-short 0.2s ease-in 2;
    transform: scale(1);
  }
</style>
